struct numC {
  num : i32
}

struct ifC<T> {
  cond: T,
  first: T,
<<<<<<< HEAD
  second: T,
=======
  second: T
>>>>>>> 73cedb41b2237cad99eb6f525ceeefd0b7adf8ce
}

struct idC {
  symbol: String,
}

struct appC<T> {
  func: T,
<<<<<<< HEAD
  args: Vec<T>,
=======
  args: Vec<T>
>>>>>>> 73cedb41b2237cad99eb6f525ceeefd0b7adf8ce
}

struct binOp<T> {
  operator: String,
  first: T,
<<<<<<< HEAD
  second: T,
=======
  second: T
>>>>>>> 73cedb41b2237cad99eb6f525ceeefd0b7adf8ce
}

struct boolC {
  b: bool,
}

struct lamC<T> {
  args: Vec<String>,
<<<<<<< HEAD
  body: T,
=======
  body: T
>>>>>>> 73cedb41b2237cad99eb6f525ceeefd0b7adf8ce
}

struct with<T> {
  vars: Vec<Vec<String>>,
  body: T
}

<<<<<<< HEAD
fn main () {
  return
=======
fn main() {
	println!("running");
>>>>>>> 73cedb41b2237cad99eb6f525ceeefd0b7adf8ce
}
